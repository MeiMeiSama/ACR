package MavisR_Orig
import DamageEvent
import AbilityGlobals
import ObjectDefinitions
import ChannelAbilityPreset
import UnitIds
import main
import ClosureForGroups

trigger mavisRListenerMove
trigger mavisRListenerEnd
unit mavis
unit dummyUnit
unit dummyUnit2
vec2 spellPos
vec2 mavisPos
integer mavisRInt
group mavisGroup
timer mavisREnd

@compiletime function createAbility()
    new ChannelAbilityPreset(MAVIS_R, 3, true)
        ..presetTargetTypes(Targettype.POINT)
        ..setAnimationNames("11111111")
        ..setButtonPositionNormalX(3)
        ..setButtonPositionNormalY(2)
        ..setButtonPositionResearchX(3)
        ..setButtonPositionResearchY(0)
        ..setIconNormal("ReplaceableTextures\\CommandButtons\\BTNAuraOfDarkness.blp")
        ..setIconResearch("ReplaceableTextures\\CommandButtons\\BTNAuraOfDarkness.blp")
        ..setMissileSpeed(99999)
        ..setHeroAbility(true)
        ..setHotkeyNormal("R")
        ..setHotkeyLearn("R")
        ..setLevels(3)
        ..setRequiredLevel(8)
        ..setLevelSkipRequirement(5)
        ..presetArtDuration(lvl -> 0)
        ..presetBaseOrderID(lvl -> "submerge")
        ..presetDisableOtherAbilities(lvl -> false)
        ..presetFollowThroughTime(lvl -> 0)
        ..presetCastRange(lvl -> 2000)
        ..presetCooldown(lvl -> 50)
        ..presetManaCost(lvl -> 70)
        ..presetTargetsAllowed(lvl -> "enemy,ground,air,neutral")
        ..presetTooltipNormal(lvl -> "Curse of Ankhseram|r")
        ..presetTooltipNormalExtended(lvl -> "Mavis R Desc|r")
        ..setTooltipLearn("Curse of Ankhseram|r")
        ..setTooltipLearnExtended("Learning R|r")
    new UnitDefinition(MAVIS_R_DUMMY, UnitIds.wisp)
        ..setNormalAbilities(commaList('Avul', 'Aloc', 'Amrf'))
        ..setAnimationCastBackswing(0)
        ..setDeathTimeseconds(0.1)
        ..setScalingValue(0.70)
        ..setUnitClassification("_")
        ..setArtSpecial("_")
        ..setHasWaterShadow(false)
        ..setMaximumPitchAngledegrees(0)
        ..setMaximumRollAngledegrees(0)
        ..setModelFile("war3mapImported\\Dark Shield.mdx")
        ..setArtSpecial("_")
        ..setArmorType(ArmorType.Unarmored)
        ..setPlaceableInEditor(false)
        ..setMovementHeight(20)
        ..setSpeedBase(100)
        ..setTurnRate(3)
        ..setMovementType(MovementType.Fly)
        ..setCollisionSize(0)
        ..setUnitSoundSet("_")
        ..setCanFlee(false)
        ..setFoodCost(0)
        ..setHideMinimapDisplay(true)
        ..setHitPointsMaximumBase(60)
        ..setHitPointsRegenerationRate(-1)
        ..setHitPointsRegenerationType("Always")
        ..setStockMaximum(1)
        ..setStockReplenishInterval(1)
        ..setStructuresBuilt("_")
        ..setUpgradesUsed("_")
        ..setHotkey("_")
        ..setName("effect dummy")
        ..setTooltipBasic("_")
        ..setTooltipExtended("_")
    new UnitDefinition(MAVIS_R_DUMMY2, UnitIds.wisp)
        ..setNormalAbilities(commaList('Avul', 'Aloc', 'Amrf'))
        ..setAnimationCastBackswing(0)
        ..setDeathTimeseconds(0.1)
        ..setScalingValue(0.70)
        ..setUnitClassification("_")
        ..setArtSpecial("_")
        ..setHasWaterShadow(false)
        ..setMaximumPitchAngledegrees(0)
        ..setMaximumRollAngledegrees(0)
        ..setModelFile("war3mapImported\\amaterasu pix.mdx")
        ..setArtSpecial("_")
        ..setArmorType(ArmorType.Unarmored)
        ..setPlaceableInEditor(false)
        ..setMovementHeight(20)
        ..setSpeedBase(100)
        ..setTurnRate(3)
        ..setMovementType(MovementType.Fly)
        ..setCollisionSize(0)
        ..setUnitSoundSet("_")
        ..setCanFlee(false)
        ..setFoodCost(0)
        ..setHideMinimapDisplay(true)
        ..setHitPointsMaximumBase(60)
        ..setHitPointsRegenerationRate(-1)
        ..setHitPointsRegenerationType("Always")
        ..setStockMaximum(1)
        ..setStockReplenishInterval(1)
        ..setStructuresBuilt("_")
        ..setUpgradesUsed("_")
        ..setHotkey("_")
        ..setName("effect dummy")
        ..setTooltipBasic("_")
        ..setTooltipExtended("_")
    
init
    initTrig_MavisR_Orig()     

function initTrig_MavisR_Orig()
    CreateTrigger()
    ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT)
    ..addAction() ->
        if GetSpellAbilityId() == MAVIS_R
            mavis=GetTriggerUnit()
            spellPos = vec2(GetSpellTargetX(), GetSpellTargetY())
            mavisPos = mavis.getPos()
            if mavisGroup == null
                mavisGroup = CreateGroup()
            mavis.setInvulnerable(true)
            mavis.pause()
            SetUnitAnimation(mavis, "spell")
            soundPlay("war3mapImported\\.mp3", 0, 0)
            dummyUnit = createUnit(MAVIS_R_DUMMY, mavisPos)
            SetUnitScale(dummyUnit,1,1,1)
            SetUnitTimeScalePercent(dummyUnit, 80)
            dummyUnit.setFacing(dummyUnit.getPos().angleTo(spellPos))
            dummyUnit2 = createUnit(MAVIS_R_DUMMY2, spellPos)
            SetUnitScale(dummyUnit2,0.80,0.80,0.80)
            SetUnitTimeScalePercent(dummyUnit2, 80)
            dummyUnit.setFacing(dummyUnit2.getPos().angleTo(mavisPos))
            mavisRInt=0
            mavisRMove()
            mavisREnd = CreateTimer()..startPeriodic(0.01, function mavisREnd)

function mavisREnd()
    if mavisRInt < 600  
        mavisRInt++
        forUnitsInRange(dummyUnit2.getPos(), 400) (unit victim) ->
            if victim.isType(UNIT_TYPE_STRUCTURE)==false and victim.isEnemyOf(mavis)==true and victim.isAlive()==true and mavisGroup.has(victim) == false and victim.isInvulnerable() == false
                DamageEvent.setNextDamageId(DAMAGE_ABILITY_R)
                DamageEvent.setNextDamageFromCode()
                UnitDamageTargetBJ(mavis, victim,(((GetUnitAbilityLevel(mavis,MAVIS_R)+1))*(GetHeroInt(mavis,true)).toReal()),ATTACK_TYPE_MAGIC,DAMAGE_TYPE_MAGIC)
                mavisGroup.add(victim)
    if mavisRInt  >= 700     
        mavisREnd2()

function mavisRMove()    
    mavisRListenerMove = CreateTrigger()
    mavisRListenerMove..registerPlayerKeyPress(mavis.getOwner(), OSKEY_LCONTROL, OSKEY_META.NONE, true)
    mavisRListenerMove..addAction() ->
        IssuePointOrder(dummyUnit2, "move", BlzGetTriggerPlayerMouseX(), BlzGetTriggerPlayerMouseY())   
    mavisRListenerEnd = CreateTrigger()
    mavisRListenerEnd..registerPlayerKeyPress(mavis.getOwner(), OSKEY_ESCAPE, OSKEY_META.NONE, true)
    mavisRListenerEnd..addAction() ->
        mavisREnd2()       

function mavisREnd2()
    mavisRListenerMove.destr()
    mavisRListenerEnd.destr()
    mavisREnd.destr()
    dummyUnit.remove()
    dummyUnit2.remove()
    mavis.setInvulnerable(false)
    mavis.unpause()
    mavisGroup.clear()  
