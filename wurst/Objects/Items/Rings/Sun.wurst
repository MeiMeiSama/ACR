package Sun

import DummyCaster
import Orders
import ClosureForGroups
import ObjectDefinitions
import ClosureEvents
import TimerUtils

int array sunRingCount
int array sunArcoCount
unit array sunRingUser
unit array sunArcoUser
unit array sunHealedUnit
group array sunRingGroup
group array sunArcoGroup
timer array sunRingHealOverTimeTimer
timer array sunArcoHealOverTimeTimer

init
    
    EventListener.add(EVENT_PLAYER_UNIT_USE_ITEM) -> 
        if GetManipulatedItem().getTypeId() == SUN_RING_VONGOLA
            let caster = GetManipulatingUnit()
            let id = caster.getOwner().getId()
            sunRingUser[id] = caster
            let u_Str = caster.getStr(true)
            let missingHp = caster.getMissingHP()
            let heal = missingHp * 0.08 + u_Str * 2
            if sunRingGroup[id] == null
                sunRingGroup[id] = CreateGroup()
            forUnitsInRange(caster.getPos(), 750) (unit u) ->
                if u.isAllyOf(caster.getOwner())   
                    new DummyCaster()
                    ..owner(caster.getOwner())
                    ..castTarget(SUN_VONGOLA_HOT_DUMMY_SPELL, 1, Orders.innerfire, u)
                    ..origin(u.getPos())
                    u.addHP(heal)
                    sunRingGroup[id].add(u)
            sunRingHealOverTimeTimer[id] = getTimer()..startPeriodic(1, function sunRingHealOverTime)..setData(id)

        else if GetManipulatedItem().getTypeId() == SUN_RING_ARCOBALENO
            let caster = GetManipulatingUnit()
            let id = caster.getOwner().getId()
            sunArcoUser[id] = caster
            let u_Str = caster.getStr(true)
            let missingHp = caster.getMissingHP()
            let heal = missingHp * 0.12 + u_Str * 5
            if sunArcoGroup[id] == null
                sunArcoGroup[id] = CreateGroup()
            forUnitsInRange(caster.getPos(), 750) (unit u) ->
                if u.isAllyOf(caster.getOwner())   
                    new DummyCaster()
                    ..owner(caster.getOwner())
                    ..castTarget(SUN_ARCO_HOT_DUMMY_SPELL, 1, Orders.innerfire, u)
                    ..origin(caster.getPos())
                    u.addHP(heal)
                    sunArcoGroup[id].add(u)
            sunArcoHealOverTimeTimer[id] = getTimer()..startPeriodic(1, function sunArcoHealOverTime)..setData(id)

function sunRingHealOverTime()
    let id = GetExpiredTimer().getData()
    sunRingCount[id]++
    let missingHp = sunRingUser[id].getMissingHP()
    let u_Str = sunRingUser[id].getStr(true)
    let hot = missingHp * 0.02 + u_Str
    sunRingGroup[id].forEachIn() (unit u) ->        
        u.addHP(hot)  
    if sunRingCount[id] >= 3
        sunRingGroup[id].clear()
        sunRingCount[id] = 0
        sunRingHealOverTimeTimer[id].release() 


function sunArcoHealOverTime()
    let id = GetExpiredTimer().getData()
    sunArcoCount[id]++
    let missingHp = sunArcoUser[id].getMissingHP()
    let u_Str = sunArcoUser[id].getStr(true)
    let hot = missingHp * 0.04 + u_Str
    sunArcoGroup[id].forEachIn() (unit u) ->        
        u.addHP(hot)  
    if sunArcoCount[id] >= 3
        sunArcoGroup[id].clear()
        sunArcoCount[id] = 0
        sunArcoHealOverTimeTimer[id].release()   

