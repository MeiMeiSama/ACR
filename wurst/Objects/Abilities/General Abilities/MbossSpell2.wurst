package MbossSpell2

import ACR_SoundCreation
import ClosureEvents
import TimerUtils
import ObjectDefinitions
import ChannelAbilityPreset
import UnitIds

constant snd2 = acrCreateSound("war3mapImported\\xxx.mp3")
int array spellCount
timer array dummyMovementStartTimer
unit array spellcaster
unit array spellvictim
vec2 array spellcasterpos
vec2 array spellvictimpos

@compiletime function amanoDummy() 
    new UnitDefinition(DUMMY_AMANO, UnitIds.wisp)
        ..setNormalAbilities(commaList('Avul', 'Aloc', 'Amrf'))
        ..setAnimationCastBackswing(0)
        ..setDeathTimeseconds(0.1)
        ..setScalingValue(1)
        ..setUnitClassification("_")
        ..setArtSpecial("_")
        ..setHasWaterShadow(false)
        ..setMaximumPitchAngledegrees(0)
        ..setMaximumRollAngledegrees(0)
        ..setModelFile("war3mapImported\\Water Trumpet.mdl")
        ..setArtSpecial("_")
        ..setArmorType(ArmorType.Unarmored)
        ..setPlaceableInEditor(false)
        ..setMovementHeight(20)
        ..setSpeedBase(100)
        ..setTurnRate(3)
        ..setMovementType(MovementType.Fly)
        ..setCollisionSize(0)
        ..setUnitSoundSet("_")
        ..setCanFlee(false)
        ..setFoodCost(0)
        ..setHideMinimapDisplay(true)
        ..setHitPointsMaximumBase(60)
        ..setHitPointsRegenerationRate(-1)
        ..setHitPointsRegenerationType("Always")
        ..setStockMaximum(1)
        ..setStockReplenishInterval(1)
        ..setStructuresBuilt("_")
        ..setUpgradesUsed("_")
        ..setHotkey("_")
        ..setName("effect dummy")
        ..setTooltipBasic("_")
        ..setTooltipExtended("_")

init
    miniBoss2()
    
function miniBoss2()   
    EventListener.add(EVENT_UNIT_DAMAGED) ->
        if BlzGetEventDamageTarget().getTypeId() == 'O008' or BlzGetEventDamageTarget().getTypeId() == 'O009' or BlzGetEventDamageTarget().getTypeId() == 'O00A'                                        
            let id = BlzGetEventDamageTarget().getUserData()  
            if GetEventDamageSource().isType(UNIT_TYPE_HERO) and spellCount[id] <= 0    
                PlaySoundOnUnitBJ(snd2, 100, GetTriggerUnit())
                let bossu = GetTriggerUnit()
                let victim = GetEventDamageSource()
                let pos = bossu.getPos()
                spellcaster[id] = bossu
                spellvictim[id] = victim
                let castX = spellvictim[id].getX()
                let castY = spellvictim[id].getY()
                var spellPos = vec2(castX, castY)
                spellcasterpos[id] = pos
                spellvictimpos[id] = spellPos
                spellCount[id] = 100
                SetUnitAnimation(spellcaster[id], "Spell 1-1")
                if pos.distanceTo(spellPos) > 1000
                    spellPos = pos.polarOffset(pos.angleTo(spellPos), 1000)
                if pos.distanceTo(spellPos) >= 100 
                    CreateTimer()..startPeriodic(0.1, function miniBoss2End)..setData(id)
                    dummyMovementStartTimer[id] = CreateTimer()..start(0.03, function dummyDashStart)..setData(id)

function dummyDashStart()
    let id = GetExpiredTimer().getData()    
    spellCount[id]--
    if spellcasterpos[id].distanceTo(spellvictimpos[id]) >= 100
        unit p
        p=createUnit(DUMMY_AMANO, spellcasterpos[id])
        SetUnitScale(p,2.5,2.5,2.5)
        SetUnitTimeScalePercent(p,80)
        UnitApplyTimedLife(p,'BHwe',2)
        BlzSetUnitFacingEx(p, spellcasterpos[id].angleTo(spellvictimpos[id]).degrees())
        p.setXY(spellcasterpos[id].polarOffset(spellcasterpos[id].angleTo(spellvictimpos[id]), 100))
        if spellcaster[id].isEnemyOf(spellvictim[id])
            spellcaster[id].damageTarget(spellvictim[id], 700, ATTACK_TYPE_MAGIC)
            SetUnitAnimation(spellcaster[id], "Stand")    
            dummyMovementStartTimer[id].destr()   
 
function miniBoss2End()
    let id = GetExpiredTimer().getData()
    spellCount[id]--
    if spellCount[id] <= 0       
        GetExpiredTimer().destr()             