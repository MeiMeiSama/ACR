package DioBrando_G

import ClosureEvents
import AbilityClassifications
import AbilityGlobals
import ObjectDefinitions
import TimerUtils

unit dio
real dioDamageTaken
real dioHealingAmount = 0
real diohealingPerSecond = 0
real diohealingDuration = 4
real diohealingElapsedTime = 0
int dioGInstanceCount
timer dioHealTimer
timer dioTranslationTimer

function dioGTranslation()
    if diohealingDuration > 0
        let skill = ARTURIA_STRENGTH_ABILITY_G
        skill..setDescription(skill,
        GOLD+
        "Whenever Lily receives damage from a basic attack, she heals back a portion of that damage over the next few seconds."+
        "\n\nDuration: "+PINK+"4"+GOLD+
        "\nDamage Healed: "+PINK+"50%"+GOLD+
        "\nCurrent Healing Stored: "+PINK+(diohealingPerSecond * diohealingDuration).toString()+GOLD)
    else 
        let skill = ARTURIA_STRENGTH_ABILITY_G
        skill..setDescription(skill,
        GOLD+
        "Whenever Lily receives damage from a basic attack, she heals back a portion of that damage over the next few seconds."+
        "\n\nDuration: "+PINK+"4"+GOLD+
        "\nDamage Healed: "+PINK+"50%"+GOLD+
        "\nCurrent Healing Stored: "+PINK+"0"+GOLD)
        GetExpiredTimer().release()     

function dioGheal() 
    if diohealingDuration <= 1
        dioDamageTaken = 0
        GetExpiredTimer().release()
    flashEffect("HealBuff.mdx", dio, "origin")
    dio.addHP((diohealingPerSecond))
    dioDamageTaken = dioDamageTaken - diohealingPerSecond 
    diohealingDuration--       


public function dioG()
    EventListener.add(EVENT_PLAYER_UNIT_DAMAGED) -> 
        if BlzGetEventDamageTarget().getTypeId() == DIO_BRANDO and BlzGetEventAttackType() == ATTACK_TYPE_MAGIC == false and BlzGetEventAttackType() == ATTACK_TYPE_CHAOS == false 

            // ━━━━━━━━━━━━ [Variables] ━━━━━━━━━━━━
            
            dio = BlzGetEventDamageTarget()
            diohealingDuration = 4
            dioDamageTaken = dioDamageTaken + GetEventDamage()
            dioHealingAmount = dioDamageTaken * 0.5
            diohealingPerSecond = dioHealingAmount / diohealingDuration
            if dioTranslationTimer.getRemaining() <= 0
                dioTranslationTimer = getTimer()..startPeriodic(0.1, function dioGTranslation)    
            if dioHealTimer.getRemaining() <= 0 
                dioHealTimer = getTimer()..startPeriodic(1, function dioGheal)  