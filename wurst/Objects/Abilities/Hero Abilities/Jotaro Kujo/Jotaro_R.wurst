package Jotaro_R

import DamageEvent
import AbilityGlobals
import ObjectDefinitions
import TerrainUtils
import ChannelAbilityPreset
import UnitIds
import main
import ClosureForGroups

unit jotaro
unit jotaroRTarget
unit dio
vec2 dioPos
vec2 jotaroPos
vec2 abilityJotaroRPos
unit starPlatinum
int jotaroRTimerInt1
int jotaroRTimerInt2
timer jotaroRTimer

@compiletime function createAbility()
    new ChannelAbilityPreset(JOTARO_R, 3, true)
        ..presetTargetTypes(Targettype.POINT)
        ..setAnimationNames("11111111")
        ..setButtonPositionNormalX(3)
        ..setButtonPositionNormalY(2)
        ..setButtonPositionResearchX(3)
        ..setButtonPositionResearchY(0)
        ..setIconNormal("ReplaceableTextures\\CommandButtons\\BTNStampede.blp")
        ..setIconResearch("ReplaceableTextures\\CommandButtons\\BTNStampede.blp")
        ..setMissileSpeed(99999)
        ..setHeroAbility(true)
        ..setHotkeyNormal("R")
        ..setHotkeyLearn("R")
        ..setLevels(3)
        ..setRequiredLevel(8)
        ..setLevelSkipRequirement(5)
        ..presetArtDuration(lvl -> 0)
        ..presetBaseOrderID(lvl -> "submerge")
        ..presetDisableOtherAbilities(lvl -> false)
        ..presetFollowThroughTime(lvl -> 0)
        ..presetCastRange(lvl -> 2000)
        ..presetCooldown(lvl -> 50)
        ..presetManaCost(lvl -> 70)
        ..presetTargetsAllowed(lvl -> "enemy,ground,air,neutral")
        ..presetTooltipNormal(lvl -> "Dash|r")
        ..presetTooltipNormalExtended(lvl -> "Mavis R Desc|r")
        ..setTooltipLearn("Dash|r")
        ..setTooltipLearnExtended("Learning R|r")
    new UnitDefinition(JOTARO_R_DUMMY, UnitIds.wisp)
        ..setNormalAbilities(commaList('Avul', 'Aloc', 'Amrf'))
        ..setAnimationCastBackswing(0)
        ..setDeathTimeseconds(0.1)
        ..setScalingValue(0.70)
        ..setUnitClassification("_")
        ..setArtSpecial("_")
        ..setHasWaterShadow(false)
        ..setMaximumPitchAngledegrees(0)
        ..setMaximumRollAngledegrees(0)
        ..setModelFile("war3mapImported\\starplatinum.mdl")
        ..setScalingValue(3.0)
        ..setArtSpecial("_")
        ..setArmorType(ArmorType.Unarmored)
        ..setPlaceableInEditor(false)
        ..setMovementHeight(20)
        ..setSpeedBase(100)
        ..setTurnRate(3)
        ..setMovementType(MovementType.Fly)
        ..setCollisionSize(0)
        ..setUnitSoundSet("_")
        ..setCanFlee(false)
        ..setFoodCost(0)
        ..setHideMinimapDisplay(true)
        ..setHitPointsMaximumBase(60)
        ..setHitPointsRegenerationRate(-1)
        ..setHitPointsRegenerationType("Always")
        ..setStockMaximum(1)
        ..setStockReplenishInterval(1)
        ..setStructuresBuilt("_")
        ..setUpgradesUsed("_")
        ..setHotkey("_")
        ..setName("effect dummy")
        ..setTooltipBasic("_")
        ..setTooltipExtended("_")

init
    jotaroR()    

function jotaroR()
    CreateTrigger()
    ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT)
    ..addAction() ->
        if GetSpellAbilityId() == JOTARO_R
            abilityJotaroRPos = vec2(GetSpellTargetX(), GetSpellTargetY())
            jotaro = GetTriggerUnit()
            jotaroPos = jotaro.getPos()
            if jotaroPos.distanceTo(abilityJotaroRPos) < 1250
                abilityJotaroRPos = jotaroPos.polarOffset(jotaroPos.angleTo(abilityJotaroRPos), 1250)
            jotaroRTimerInt1 = 0
            jotaroRDashBool = true
            jotaro.setAnimation(11)
            jotaro.pause()
            jotaro.setInvulnerable(true)       
            jotaro.setPathing(false)
            jotaro.setFacing(jotaroPos.angleTo(abilityJotaroRPos))     
            let rng = GetRandomInt(0, 1)
            if rng == 0
                gg_snd_jotaroR1_1.play()
            else 
                gg_snd_jotaroR1_2.play()    
            jotaroRTimer = CreateTimer()..startPeriodic(0.01, function jotaroRDash)

function jotaroRDash()
    jotaroRTimerInt1++
    if jotaroRTimerInt1 >= 50 or jotaroPos.distanceTo(abilityJotaroRPos) < 25
        jotaro.setAnimation(13)
        jotaroDashEnd()

    if jotaroRTimerInt1 < 50
        if jotaroPos.polarOffset(jotaroPos.angleTo(abilityJotaroRPos), 100).isTerrainPathable(PATHING_TYPE_WALKABILITY) == true and jotaroPos.polarOffset(jotaroPos.angleTo(abilityJotaroRPos), 100).isTerrainPathable(PATHING_TYPE_FLYABILITY) == true 
            jotaroDashEnd()          
        else
            jotaro.setPos(jotaroPos.polarOffset(jotaroPos.angleTo(abilityJotaroRPos), 25))
            jotaroPos = jotaro.getPos()
            forUnitsInRange(jotaroPos, 350) (unit u) ->
                if jotaro.isAllyOf(u) == false and u.isType(UNIT_TYPE_HERO) and jotaroRDashBool == true
                    if u.getTypeId() == DIO_BRANDO and dioRDashBool == true
                        print("dio")
                        jotaroRDashBool = false
                        jotaroDashEnd()
                        dio = u
                        dioPos = dio.getPos()
                        jotaro.setFacing(jotaroPos.angleTo(dioPos))
                        dio.setFacing(dioPos.angleTo(jotaroPos))     
                        jotaroRTimerInt2 = 0       
                        jotaroRTimer = CreateTimer()..startPeriodic(0.03, function jotaroRDio)                             
                    else if u.isInvulnerable() == false
                        jotaroRDashBool = false
                        jotaroDashEnd()
                        jotaroRTarget = u
                        jotaro.pause()
                        jotaro.setInvulnerable(true)
                        jotaro.setPathing(false)
                        jotaroRTarget.pause()
                        jotaroRTarget.setInvulnerable(true)
                        jotaroRTarget.setPathing(false)
                        jotaro.setPos(jotaroRTarget.getPos().polarOffset(jotaroRTarget.getPos().angleTo(jotaroPos), 350))
                        jotaro.setFacing(jotaro.getPos().angleTo(jotaroRTarget.getPos()))
                        starPlatinum = createUnit(JOTARO_R_DUMMY, jotaroRTarget.getPos().polarOffset(jotaroRTarget.getPos().angleTo(jotaroPos), 150))     
                        starPlatinum.setAnimation(7)
                        starPlatinum.setFacing(starPlatinum.getPos().angleTo(jotaroRTarget.getPos()))
                        jotaroRTimerInt2 = 0             
                        jotaroRTimer = CreateTimer()..startPeriodic(0.03, function jotaroRAttack1)           

function jotaroRDio()



function jotaroDashEnd()
    jotaroRDashBool = false
    jotaroRTimer.destr()
    jotaro.setPathing(true)
    jotaro.unpause()
    jotaro.setInvulnerable(false)    

function jotaroRAttack1()
    jotaroRTimerInt2++
    if jotaroRTimerInt2 == 10
        gg_snd_jotaroR2.play() 
        jotaro.setAnimation(8)
        starPlatinum.setAnimation(4)
    if jotaroRTimerInt2 == 20
        gg_snd_jotaroR3.play()
        jotaro.setAnimation(21)
        starPlatinum.setAnimation(3) 
    if jotaroRTimerInt2 >= 21 and jotaroRTimerInt2 < 140
        jotaroPos = jotaro.getPos()
        jotaro.setPos(jotaroPos.polarOffset(jotaroPos.angleTo(jotaroRTarget.getPos()), 5)) 
        jotaroRTarget.setPos(jotaroPos.polarOffset(jotaroPos.angleTo(jotaroRTarget.getPos()), 355))
        starPlatinum.setPos(jotaroPos.polarOffset(jotaroPos.angleTo(jotaroRTarget.getPos()), 155))       
    if jotaroRTimerInt2 == 140
        gg_snd_jotaroR4.play() 
    if jotaroRTimerInt2 == 175
        jotaro.setAnimation(9)
        starPlatinum.setAnimation(1) 
        gg_snd_jotaroR5.play()
    if jotaroRTimerInt2 == 200
        jotaroRTarget.setInvulnerable(false)
        starPlatinum.kill()
        DamageEvent.setNextDamageId(DAMAGE_ABILITY_DELAYED_R)
        DamageEvent.setNextDamageFromCode()
        jotaro.damageTarget(jotaroRTarget, 1, ATTACK_TYPE_MAGIC)
        jotaroDashEnd()
        jotaroRTarget.setPathing(true)
        jotaroRTarget.unpause()   
