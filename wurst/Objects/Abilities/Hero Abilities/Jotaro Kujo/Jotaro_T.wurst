package Jotaro_T

import AbilityGlobals
import ObjectDefinitions
import ChannelAbilityPreset
import UnitIds
import main
import ClosureForGroups
import ACR_TagSystem

unit jotaro
vec2 jotaroPos
public vec2 abilityJotaroTPos
vec2 emptyVector
unit starPlatinum
unit za_Warudo_Jotaro
group jotaroTGroup
int jotaroTTimerInt1
int jotaroRTimerInt2
timer jotaroTTimer

@compiletime function createAbility()
    new ChannelAbilityPreset(JOTARO_T, 1, true)
        ..presetTargetTypes(Targettype.NONE)
        ..setAnimationNames("11111111")
        ..setButtonPositionNormalX(3)
        ..setButtonPositionNormalY(1)
        ..setButtonPositionResearchX(3)
        ..setButtonPositionResearchY(1)
        ..setIconNormal("ReplaceableTextures\\CommandButtons\\BTNUsedSoulGem.blp")
        ..setIconResearch("ReplaceableTextures\\CommandButtons\\BTNUsedSoulGem.blp")
        ..setMissileSpeed(99999)
        ..setHeroAbility(true)
        ..setHotkeyNormal("T")
        ..setHotkeyLearn("T")
        ..setLevels(1)
        ..setRequiredLevel(23)
        ..presetArtDuration(lvl -> 0)
        ..presetBaseOrderID(lvl -> "eattree")
        ..presetDisableOtherAbilities(lvl -> false)
        ..presetFollowThroughTime(lvl -> 0)
        ..presetCastRange(lvl -> 2000)
        ..presetCooldown(lvl -> 50)
        ..presetManaCost(lvl -> 70)
        ..presetTargetsAllowed(lvl -> "enemy,ground,air,neutral")
        ..presetTooltipNormal(lvl -> "Law")
        ..presetTooltipNormalExtended(lvl -> GOLD+"Mavis uses law on target, and engulfs nearby enemies hit by it."+"\n\ncooldown: "+BLUE+"50|r")
        ..setTooltipLearn("Law|r")
        ..setTooltipLearnExtended(GOLD+"Mavis uses law on target, and engulfs nearby enemies hit by it."+"\n\ncooldown: "+BLUE+"50|r")
    new UnitDefinition(JOTARO_T_DUMMY, UnitIds.wisp)
        ..setNormalAbilities(commaList('Avul', 'Aloc', 'Amrf'))
        ..setAnimationCastBackswing(0)
        ..setDeathTimeseconds(0.1)
        ..setScalingValue(0.70)
        ..setUnitClassification("_")
        ..setArtSpecial("_")
        ..setHasWaterShadow(false)
        ..setMaximumPitchAngledegrees(0)
        ..setMaximumRollAngledegrees(0)
        ..setModelFile("war3mapImported\\FieldPuRPle.mdl")
        ..setScalingValue(2.35)
        ..setArtSpecial("_")
        ..setArmorType(ArmorType.Unarmored)
        ..setPlaceableInEditor(false)
        ..setMovementHeight(20)
        ..setSpeedBase(100)
        ..setTurnRate(3)
        ..setMovementType(MovementType.Fly)
        ..setCollisionSize(0)
        ..setUnitSoundSet("_")
        ..setCanFlee(false)
        ..setFoodCost(0)
        ..setHideMinimapDisplay(true)
        ..setHitPointsMaximumBase(60)
        ..setHitPointsRegenerationRate(-1)
        ..setHitPointsRegenerationType("Always")
        ..setStockMaximum(1)
        ..setStockReplenishInterval(1)
        ..setStructuresBuilt("_")
        ..setUpgradesUsed("_")
        ..setHotkey("_")
        ..setName("effect dummy")
        ..setTooltipBasic("_")
        ..setTooltipExtended("_")
    new UnitDefinition(JOTARO_T_DUMMY2, UnitIds.wisp)
        ..setNormalAbilities(commaList('Avul', 'Aloc', 'Amrf'))
        ..setAnimationCastBackswing(0)
        ..setDeathTimeseconds(0.1)
        ..setScalingValue(0.70)
        ..setUnitClassification("_")
        ..setArtSpecial("_")
        ..setHasWaterShadow(false)
        ..setMaximumPitchAngledegrees(0)
        ..setMaximumRollAngledegrees(0)
        ..setModelFile("war3mapImported\\Star Platinum.mdx")
        ..setScalingValue(1.5)
        ..setArtSpecial("_")
        ..setArmorType(ArmorType.Unarmored)
        ..setPlaceableInEditor(false)
        ..setMovementHeight(20)
        ..setSpeedBase(100)
        ..setTurnRate(3)
        ..setMovementType(MovementType.Fly)
        ..setCollisionSize(0)
        ..setUnitSoundSet("_")
        ..setCanFlee(false)
        ..setFoodCost(0)
        ..setHideMinimapDisplay(true)
        ..setHitPointsMaximumBase(60)
        ..setHitPointsRegenerationRate(-1)
        ..setHitPointsRegenerationType("Always")
        ..setStockMaximum(1)
        ..setStockReplenishInterval(1)
        ..setStructuresBuilt("_")
        ..setUpgradesUsed("_")
        ..setHotkey("_")
        ..setName("effect dummy")
        ..setTooltipBasic("_")
        ..setTooltipExtended("_")
init
    jotaroT()    

function jotaroT()
    CreateTrigger()
    ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT)
    ..addAction() ->
        if GetSpellAbilityId() == JOTARO_T
            jotaro = GetTriggerUnit()
            abilityJotaroTPos = jotaro.getPos()
            jotaro.pause()
            jotaro.setInvulnerable(true)
            gg_snd_jotaroT1.play()           
            jotaro.setAnimation(2)
            if jotaroTGroup == null
                jotaroTGroup = CreateGroup()               
            jotaroTTimerInt1 = 0                          
            jotaroTTimer = CreateTimer()..startPeriodic(0.02, function jotaroTStart)  

function jotaroTStart()
    jotaroTTimerInt1++
    if jotaroTTimerInt1 == 25
        starPlatinum = createUnit(JOTARO_T_DUMMY2, jotaro.getPos())     
        starPlatinum.setFacing(jotaro.getFacingAngle())             
    if jotaroTTimerInt1 == 65
        starPlatinum.setAnimation(1)
    if jotaroTTimerInt1 == 100
        za_Warudo_Jotaro = createUnit(JOTARO_T_DUMMY, jotaro.getPos())
        jotaro.unpause()
        jotaro.setInvulnerable(false) 
        starPlatinum.kill()
    if jotaroTTimerInt1 > 100 and jotaroTTimerInt1 < 500    
        forUnitsInRange(abilityJotaroTPos, 900) (unit u) ->
            if u.getTypeId() != DIO_BRANDO and u.getTypeId() != KUJO_JOTARO and u.isInvulnerable() == false and u.hasTagPauseEX() == false and jotaroTGroup.has(u) == false
                IssueImmediateOrder(u, "stop")
                jotaroTGroup.add(u)
                u.pauseEx()
                u.addTagPauseEX()
        jotaroTGroup.forEachIn() (unit u) ->
            if u.getPos().distanceTo(abilityJotaroTPos) > 900
                jotaroTGroup.remove(u)
                if u.hasTagPauseEX()
                    u.unpauseEx()
                    u.removeTagPauseEX()
    if jotaroTTimerInt1 >= 500
        jotaroTTimer.destr()
        za_Warudo_Jotaro.kill()
        jotaroTGroup.forEachIn() (unit u) ->
            if u.hasTagPauseEX()
                u.unpauseEx()
                u.removeTagPauseEX()
        jotaroTGroup.clear()
        abilityJotaroTPos = emptyVector




