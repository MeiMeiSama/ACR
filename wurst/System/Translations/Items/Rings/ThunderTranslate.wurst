package ThunderTranslate

import ObjectDefinitions
import TimerUtils

timer array thunderTimer
int array thunderStr
unit array thunderUser

init
    thunderEventCheck()

function thunderDynamicTranslation(unit user, item thunder)
    if thunder.getTypeId() == THUNDER_RING_VONGOLA
        let baseDmg = 100
        let currentStr = (user.getStr(true) * 2.5).ceil() 
        let dmg = baseDmg + currentStr
        BlzSetItemExtendedTooltip(thunder, "|n|cff008080Active:|n|n|r|cffffd700Dash towards the targeted location, dealing damage to enemies struck and paralyzing them for 1 second.|n|n|r|cffffd700Damage output: |cffff0000"+dmg.toString()+"|n|r|cffffd700Damage Formula:|r|cffc0c0c0 100 |cffff8080+ |cffff00002.5x Strength|r|n|cffffd700Cooldown: |cffff808045|r|n|n|cffc0c0c0Passive|r|n|n|cffff0000Strength + 75|n|r|cffffd700Increases the user's attack by 75|n|r|cffffd700Increases the user's health by 30")
    else if thunder.getTypeId() == THUNDER_RING_ARCOBALENO
        let baseDmg = 200
        let currentStr = (user.getStr(true) * 4.0).ceil() 
        let dmg = baseDmg + currentStr 
        BlzSetItemExtendedTooltip(thunder, "|n|cff008080Active:|n|n|r|cffffd700Dash towards the targeted location, dealing damage to enemies struck and paralyzing them for 2 seconds.|n|n|r|cffffd700Damage output: |cffff0000"+dmg.toString()+"|n|r|cffffd700Damage Formula:|r|cffc0c0c0 200 |cffff8080+ |cffff00004.0x Strength|r|n|cffffd700Cooldown: |cffff808045|r|n|n|cffc0c0c0Passive|r|n|n|cffff0000Strength + 165|n|r|cffffd700Increases the user's attack by 165|n|r|cffffd700Increases the user's health by 66")

function thunderTranslationTimer() 
    let id = GetExpiredTimer().getData()
    if  thunderStr[id] != thunderUser[id].getStr(true)    
        for i = 0 to 5
            if UnitItemInSlot(thunderUser[id], i).getTypeId() == THUNDER_RING_VONGOLA
                thunderStr[id] = thunderUser[id].getStr(true)
                let thunderRing = UnitItemInSlot(thunderUser[id], i)
                thunderDynamicTranslation(thunderUser[id], thunderRing)
                        
                
            if UnitItemInSlot(thunderUser[id], i).getTypeId() == THUNDER_RING_ARCOBALENO
                thunderStr[id] = thunderUser[id].getStr(true)                      
                let thunderPacifier = UnitItemInSlot(thunderUser[id], i)
                thunderDynamicTranslation(thunderUser[id], thunderPacifier)

    if thunderUser[id].hasItemById(THUNDER_RING_VONGOLA) == false and thunderUser[id].hasItemById(THUNDER_RING_ARCOBALENO) == false
        thunderTimer[id].destr()    

function thunderEventCheck()

    // ━━━━━━━━━━━━ [RUNS TRANSLATION FOR ALL thunder RINGS/ARCOS IN THE INVENTORY IF thunder RING/ARCO IS PICKED UP] ━━━━━━━━━━━━
     
    CreateTrigger()
    ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_PICKUP_ITEM)
    ..addAction() ->
        if GetManipulatedItem().getTypeId() == THUNDER_RING_VONGOLA or GetManipulatedItem().getTypeId() == THUNDER_RING_ARCOBALENO
            let user = GetManipulatingUnit()
            let id = user.getOwner().getId()
            thunderUser[id] = user
            if GetManipulatedItem().getTypeId() == THUNDER_RING_VONGOLA
                for i = 0 to 5
                    if UnitItemInSlot(user, i).getTypeId() == THUNDER_RING_VONGOLA
                        let thunderRing = UnitItemInSlot(user, i)
                        thunderDynamicTranslation(user, thunderRing)
            else if GetManipulatedItem().getTypeId() == THUNDER_RING_ARCOBALENO
                for i = 0 to 5
                    if UnitItemInSlot(user, i).getTypeId() == THUNDER_RING_ARCOBALENO
                        let thunderPacifier = UnitItemInSlot(user, i)
                        thunderDynamicTranslation(user, thunderPacifier)
                
            thunderStr[id] = user.getStr(true)
            // ━━━━━━━━━━━━ [RUNS TRANSLATION FOR ALL thunder RINGS/ARCOS IN THE INVENTORY WHENEVER AGI CHANGES] ━━━━━━━━━━━━
            CreateTimer()..startPeriodic(0.25, function thunderTranslationTimer).setData(id)
