package ACR_ReviveInstant

import ACR_TagSystem
import TimerUtils

unit array acrReviveUnit
boolean array acrReviveBoolean
vec2 array acrReviveUnitPos
player array acrReviveUnitOwner
real array acrReviveUnitHealth
real array acrReviveUnitMana

function acrReviveEnd()
    let id = GetExpiredTimer().getData()
    acrReviveUnit[id].revive(acrReviveUnitPos[id], false)
    acrReviveUnit[id].setMana(acrReviveUnitMana[id])
    acrReviveUnit[id].setHP(acrReviveUnitHealth[id])
    if acrReviveUnit[id].hasTagRevive() == true
        acrReviveUnit[id].removeTagRevive()
    if acrReviveBoolean[id] == true
        acrReviveUnitOwner[id].select(acrReviveUnit[id])    

public function acrRevive(unit caster)
    let id = caster.getOwner().getId()
    let p = caster.getOwner()
    acrReviveUnit[id] = caster
    acrReviveUnitPos[id] = caster.getPos()
    acrReviveUnitOwner[id] = p
    acrReviveUnitHealth[id] = caster.getHP()
    acrReviveUnitMana[id] = caster.getMana()
    acrReviveBoolean[id] = false
    if caster.hasTagRevive() == false
        caster.addTagRevive()
    if IsUnitSelected(caster, p)
        acrReviveBoolean[id] = true   
    caster.setHP(0)