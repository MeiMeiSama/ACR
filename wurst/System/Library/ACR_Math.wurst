package ACR_Math

public function getAngle2D(real x, real y, real x2, real y2) returns real
    let dx = x2 - x
    let dy = y2 - y
    return bj_RADTODEG * Atan2(dx, dy)

public function newX(real locX, real dist, real angle) returns real
    return locX + dist * Cos(Deg2Rad(angle))

public function newY(real locY, real dist, real angle) returns real
    return locY + dist * Sin(Deg2Rad(angle))

public function getAxisAngle(real fromX, real fromY, real targetX, real targetY) returns real
    return (Atan2(targetY - fromY, targetX - fromX))

public function getAngleCast(unit caster, real targetX, real targetY) returns real
    let fromX = GetUnitX(caster)
    let fromY = GetUnitY(caster)
    if fromX == targetX and fromY == targetY
        return GetUnitFacing(caster)
    return getAxisAngle(fromX, fromY, targetX, targetY)
