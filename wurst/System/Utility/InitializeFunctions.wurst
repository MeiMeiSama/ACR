package InitializeFunctions

import ACR_CooldownTracker
import WaveSystem
import BountySystem
import ObjectDefinitions
import UpdateTooltips
import AbilityClassifications
import UpdateLearningTooltips
import RUID
import Scoreboard
import GoldIncome
import QuestItems
import MusicPlaylist
import ExperienceDistribution
import SoundFunctions
import AbilityGlobals
import ACR_TagSystem
import CameraFunctions
import ACR_SpeedBoost
import GetFrames
import TimerUtils
import BootsStackDisable
import MbossSpell1
import MbossSpell2

import Aqua_G
import Yato_G
import Yamamoto_G
import InuyashaAttack_Orig
import Akame_G
import Levi_G
import Neptune_G
import Nura_G
import Noire_G
import KiritoNew_G
import Himeragi_G
import Hibari_G
import Gray_G
import KiritoOld_G
import Natsu_E
import Shana_New_E
import Sasuke_Young_E
import Luffy_G
import Luffy_E
import MashKyrielight_G
import GajeelRedfox_G
import SaberStrength_G
import DioBrando_G
import Semiramis_G
import Shalltear_G
import Abigal_G
import Sistine_F
import Akame_F
import Tohno_G
import Nanaya_Normal_G
import Nanaya_White_G
import Ryougi_Melty_G
import Ryougi_Saber_G
import Jack_F
import Aizen_F
import IchigoStrength_E
import Byakuran_F
import Kenjiro_F
import Wendy_E
import N_Minato_E
import Tohno_F
import Nanaya_Normal_F
import Ryougi_Kimono_T
import Ryougi_Kimono_G
import Kotori_G
import Ace_G
import Sabo_G
import N_Natsu_G
import S_Natsu_G
import Cobra_G
import Jotaro_G
import misakaOnKillBLT
import MavisE_Orig
import ZervisG_Orig
import Zeref_F
import RukiaR
import RukiaG

/*

    - Iniitalize functions after the game has started, when most data is "valid" such as udg_Playhero

*/
function initUI ()
    BlzFrameSetVisible(BlzFrameGetChild(BlzFrameGetChild(BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), 5),0), false)
    MultiboardSuppressDisplay(true)
    GetExpiredTimer().destr()

function heroG_delay2 ()
    let i = GetExpiredTimer().getData()
    if not udg_PlayHero[i].hasAbility('A18V')
        udg_PlayHero[i].addAbility('A18V')
        udg_PlayHero[i].makeAbilityPermanent('A18V', true)
    let id = udg_PlayHero[i].getOwner().getId()
    if udg_PlayHero[i].getTypeId() != 'H03E'
        udg_PlayHero[i].addAbility(SPELL_F[id])
        udg_PlayHero[i].makeAbilityPermanent(SPELL_F[id], true)
        if SPELL_F[id].hasTagHidden() == false
            SPELL_F[id].addTagHidden()
            udg_PlayHero[i].hideAbility(SPELL_F[id], true)
        if udg_PlayHero[i].getTypeId() == 'H02M'
            udg_PlayHero[i].addAbility(SPELL_F2[id])
            udg_PlayHero[i].makeAbilityPermanent(SPELL_F2[id], true)
            if SPELL_F2[id].hasTagHidden() == false
                udg_PlayHero[i].hideAbility(SPELL_F2[id], true)
                SPELL_F2[id].addTagHidden()        
    GetExpiredTimer().destr()

function heroG_delay1 ()
    let i = GetExpiredTimer().getData()
    setTooltipTitleAll(udg_PlayHero[i])
    acrCamera(udg_PlayHero[i])
    GetExpiredTimer().destr()

function updateSelection ()
    updateSelect()
    GetExpiredTimer().destr()

public function initFunctions ()
    BlzChangeMinimapTerrainTex("MinimapPreview2.blp")
    firstWave()
    bountySystemSetup()
    // acrAntiCheat()
    // BlzFrameSetVisible(BlzGetFrameByName("ConsoleUIBackdrop",0), true)
    BlzFrameSetVisible(getFrameACR("ConsoleUIBackdrop", 0), true)
    BlzHideOriginFrames(false)
    moonUI()
    acrSpeedBoostTimer()
    scoreboardMain()
    scoreboardTab()
    bootStack()
    scoreboardValues()
    goldIncome()
    goldIncomeShared()
    miniBoss1()
    miniBoss2()
    expDistr()
    bgmList()
    killSoundDatabase()
    killSounds()
    bgmExceptionList()
    createQuest()
    acrCooldownTracker()
    CreateTimer()..start(0.1, function initUI)

    // ---- Hero G's ---- \\
    for i = 0 to 12
        if udg_PlayHero[i] != null
            CreateTimer()..start(0.1, function heroG_delay1)..setData(i)
            Player(i)..select(udg_PlayHero[i])..panCameraToTimed(udg_PlayHero[i].getPos(), 1)

        if udg_PlayHero[i] != null
            CreateTimer()..start(0.05, function heroG_delay2)..setData(i)
               
        if udg_PlayHero[i].isModeHeroBase()
            updateTooltipsInit_Mode(udg_PlayHero[i])
            updateTooltipsOnceInit_Mode(udg_PlayHero[i])

        if udg_PlayHero[i] != null
            addAbilities(udg_PlayHero[i])
            udg_PlayHero[i].updateLearningTooltips()

        if udg_PlayHero[i].getTypeId() == AKAME_MURASAME
            enhancedAttacksAkame(udg_PlayHero[i])
            akameF()

        if udg_PlayHero[i].getTypeId() == LEVI_ACKERMAN
            enhancedAttacksLevi(udg_PlayHero[i])

        if udg_PlayHero[i].getTypeId() == 'H001'
            natsuE()     
        if udg_PlayHero[i].getTypeId() == 'H020'
            shanaNewE()           

        if udg_PlayHero[i].getTypeId() == 'H006'
            wendyE()  

        if udg_PlayHero[i].getTypeId() == 'H008' or udg_PlayHero[i].getTypeId() == 'H00H'
            misakaKillBLTFunc()        

        if udg_PlayHero[i].getTypeId() == 'H00M'
            minatoE()   

        if udg_PlayHero[i].getTypeId() == 'H023'
            byakuranF() 

        if udg_PlayHero[i].getTypeId() == 'H01S'
            tohnoF()  
            tohnoG()

        if udg_PlayHero[i].getTypeId() == 'H00Z'
            ryougiKimonoT()  
            ryougiKimonoG()            

        if udg_PlayHero[i].getTypeId() == 'H01E'
            nanayaNormalF() 
            nanayaNormalG()                 

        if udg_PlayHero[i].getTypeId() == 'H03Z'
            kenjiroF() 

        if udg_PlayHero[i].getTypeId() == 'H043'
            sistineF()  

        if udg_PlayHero[i].getTypeId() == 'H02K'
            jackF()               

        if udg_PlayHero[i].getTypeId() == 'H01R'
            aizenF() 

        if udg_PlayHero[i].getTypeId() == SASUKE_YOUNG
            sasukeYoungE()                    

        if udg_PlayHero[i].getTypeId() == ICHIGO_STRENGTH
            ichigoStrE()

        if udg_PlayHero[i].getTypeId() == KUJO_JOTARO
            jotaroG()

        if udg_PlayHero[i].hasAbility('B06D')
            meltyRyougiG()     

        if udg_PlayHero[i].hasAbility('B06E')
            saberRyougiG()                                       
 
        if udg_PlayHero[i].hasAbility('B06B')
            nanayaWhiteG()    
   
        if udg_PlayHero[i].hasAbility('A0MN')
            yamamotoG()

        if udg_PlayHero[i].hasAbility('A180')
            grayG()     
  
        if udg_PlayHero[i].hasAbility('A182')
            kiritoOldG()                                         
   
        if udg_PlayHero[i].hasAbility('A17B')
            neptuneG()     
   
        if udg_PlayHero[i].hasAbility('A178')
            kiritoNewG()
   
        if udg_PlayHero[i].hasAbility('A17Y')
            himeragiG()     
   
        if udg_PlayHero[i].hasAbility('A17Z')
            hibariG()                      
    
        if udg_PlayHero[i].hasAbility('A17X')
            noireG()     
        if udg_PlayHero[i].hasAbility('A17W')
    
            nuraG()                                                        
        if udg_PlayHero[i].hasAbility('A0RE')
            aquaG2()
    
        if udg_PlayHero[i].hasAbility('A0C2')
            yatoG()    
    
        if udg_PlayHero[i].hasAbility('A18E')
            semiramisG()
   
        if udg_PlayHero[i].hasAbility('A05J')
            shaltearG()  
   
        if udg_PlayHero[i].hasAbility('A18G')
            abigailG()                                                                                                                               
 
        if udg_PlayHero[i].hasAbility('A0O4')
            initTrig_InuyashaAttack_Orig()
  
        if udg_PlayHero[i].getTypeId() == MONKEYD_LUFFY
            luffyG()
            luffyE()
  
        if udg_PlayHero[i].getTypeId() == GAJEEL_REDFOX
            gajeelG()
    
        if udg_PlayHero[i].getTypeId() == MASHU_KYRIELIGHT
            mashG()
    
        if udg_PlayHero[i].getTypeId() == DIO_BRANDO
            dioG()
    
        if udg_PlayHero[i].getTypeId() == ARTURIA_STRENGTH
            saberStrG()
        if udg_PlayHero[i].getTypeId() == ITSUKA_KOTORI
            kotoriDot()        
        if udg_PlayHero[i].getTypeId() == PORTGASD_ACE
            aceDot()      
        if udg_PlayHero[i].getTypeId() == SABO
            saboDot()          
        if udg_PlayHero[i].getTypeId() == 'H001'
            natsuDot()    
        if udg_PlayHero[i].getTypeId() == 'H00Y'
            natsu2Dot()     
        if udg_PlayHero[i].getTypeId() == COBRA
            cobraDot()
        if udg_PlayHero[i].getTypeId() == ZEREF
            zerefKillFunc()   
        if udg_PlayHero[i].getTypeId() == MAVIS
            initTrig_MavisE_Orig()            
            let mavis = udg_PlayHero[i]
            let mavisG = SPELL_G2[i]
            for a = 0 to 12 
                if udg_PlayHero[a].getTypeId() == ZEREF //'H01U' 
                    let zeref = udg_PlayHero[a]
                    let zerefG = SPELL_G2[a]
                    mavis.addAbility(mavisG)
                    zeref.addAbility(zerefG)
                    mavis.makeAbilityPermanent(mavisG, true)
                    zeref.makeAbilityPermanent(zerefG, true)
                    if mavisG.hasTagHidden() == false
                        mavis.hideAbility(mavisG, true)
                        mavisG.addTagHidden()       
                    if zerefG.hasTagHidden() == false
                        zeref.hideAbility(zerefG, true)
                        zerefG.addTagHidden()                           
                    zervisGAddTimer()
        if udg_PlayHero[i].getTypeId() == RUKIA
            let rukia = udg_PlayHero[i]
            let rukiaQ2 = SPELL_Q2[i]
            let rukiaW2 = SPELL_W2[i]
            let rukiaE2 = SPELL_E2[i]
            rukia.addAbility(rukiaQ2)
            rukia.makeAbilityPermanent(rukiaQ2, true) 
            if rukiaQ2.hasTagHidden() == false
                rukia.hideAbility(rukiaQ2, true)
                rukiaQ2.addTagHidden()
            rukia.addAbility(rukiaW2)
            rukia.makeAbilityPermanent(rukiaW2, true) 
            if rukiaW2.hasTagHidden() == false
                rukia.hideAbility(rukiaW2, true)
                rukiaW2.addTagHidden()
            rukia.addAbility(rukiaE2)
            rukia.makeAbilityPermanent(rukiaE2, true) 
            if rukiaE2.hasTagHidden() == false
                rukia.hideAbility(rukiaE2, true)
                rukiaE2.addTagHidden()
            rukiaR()
            rukiaG()                            
    CreateTimer().start(3, function updateSelection)