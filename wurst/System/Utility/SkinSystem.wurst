package SkinSystem

import HashMap
import ClosureFrames
import FramehandleNames
import TimerUtils
import Abilities
import ObjectDefinitions

// map<unittype, Skin> skins = map<unittype, Skin>
var skins = new HashMap<int, Skin> 
bool array skinEquipped
bool array skinCooldown

// Skin data structure
public class Skin
    // Store the skin unit type ID (or skin ID)
    integer skinId
    // Determine if the skin is universal or restricted
    bool isUniversal
    // Store the player name if the skin is restricted
    string playerName = ""

    construct(integer skinId, bool isUniversal, string playerName)
        this.skinId = skinId
        this.isUniversal = isUniversal
        this.playerName = playerName

public function registerSkins()
    // Universal skin for unit type H03D
    skins.put('H03D', new Skin('h04E', true, "")) // h04E is the skin ID
    skins.put('H001', new Skin(natsu_skin, true, ""))
    
    // Restricted skin for unit type H008, only for a specific player
    skins.put('H008', new Skin('h04F', false, "ReusXMarina")) // h04F is the skin ID

public function applySkin(unit u, player p)
    let unitType = u.getTypeId()
    if skins.has(unitType)
        let skin = skins.get(unitType)
        if skin.isUniversal
            // Apply the universal skin
            BlzSetUnitSkin(u, skin.skinId)
            skinEquipped[p.getId()] = true
        else
            // Check if the player's name matches the restricted skin's player name
            if p.getName() == skin.playerName
                BlzSetUnitSkin(u, skin.skinId)
                skinEquipped[p.getId()] = true

function skinCooldownEnd ()
    let pid = GetExpiredTimer().getData()
    skinCooldown[pid] = false
    GetExpiredTimer().destr()

public function createSkinButton()
    let skinButton = BlzCreateFrameByType(FramehandleTypeNames.buttonframe, "skinBTN", GAME_UI, FramehandleNames.scriptDialogButton, 0)
    ..setAbsPoint(FRAMEPOINT_CENTER, 0.007, 0.027)
    ..setSize(0.06, 0.05)
    skinButton..getChild(0)..setTexture("UI\\SkinButton.blp", 0, false)
    skinButton..getChild(1)..setTexture("UI\\SkinButtonClick.blp", 0, false)

    skinButton.onClick() ->
        let pid = GetTriggerPlayer().getId()
        if skinCooldown[pid] == false
            skinButton.unfocus(GetTriggerPlayer())
            let u = udg_PlayHero[pid]
            if players[pid].getController() == MAP_CONTROL_USER and players[pid].getSlotState() == PLAYER_SLOT_STATE_PLAYING and u != null
                if gg_rct_Team1BaseArea.contains(u.getPos()) or gg_rct_Team2BaseArea.contains(u.getPos()) or gg_rct_Team3BaseArea.contains(u.getPos())
                    if skinEquipped[pid] == false
                        applySkin(u, players[pid])
                        flashEffect(Abilities.fireLordDeathExplode, u.getPos())
                    else if skinEquipped[pid] == true
                        BlzSetUnitSkin(u, u.getTypeId())
                        skinEquipped[pid] = false
                        flashEffect(Abilities.fireLordDeathExplode, u.getPos())
            skinCooldown[pid] = true
            CreateTimer()..start(300, function skinCooldownEnd)..setData(pid) // Can only use button each 300s

init
    CreateTimer()..start(0.5, function initSkinSystem)   

function initSkinSystem ()
    registerSkins()
    createSkinButton()
    GetExpiredTimer().destr()

