package devTools
import ClosureEvents
import Orders
import main
import ACR_TagSystem
import ACR_Library
import ClosureTimers
CallbackPeriodic acrTimer
int acrdevtimer
unit selectedUnit
bool array devTools
fogmodifier array acr_MH

init
    udg_PlayHero[4] = createUnit(Player(4), 'H02W', vec2(0, 0))..setUserData(4)
    ..setStr(5000)
    udg_PlayHero[5] = createUnit(Player(5), 'H01N', vec2(0, 0))..setUserData(5)
    ..setStr(5000)
    udg_PlayHero[6] = createUnit((Player(6)), 'H028', vec2(0, 0))..setUserData(6)
    ..setStr(500)
    udg_PlayHero[9] = createUnit((Player(9)), 'H008', vec2(-2000, -2000))..setUserData(9)
    ..setStr(5000)
    devTools()
function devTools ()
    teleport()
    for i = 0 to 12
        devTools[i] = false

    EventListener.add(EVENT_PLAYER_CHAT_FILTER) ->
        let input = GetEventPlayerChatString()
        let p = GetTriggerPlayer()
        let id = p.getId()
        if input == "acr"
            print("|cffffd700Dev Tools: |cffff0000ON|r", 3)
            p.setGold(500000)
            udg_PlayHero[id]
            ..setLevel(45, false)
            ..setStr(100)
            ..setInt(100)
            ..setAgi(100)
            ..setMaxMana(1000)
            ..setMaxHP(1000)
            devTools[id] = true
            activator_Handler(id)
            acr_MH[id] = createFogModifier(p, FOG_OF_WAR_VISIBLE, GetWorldBounds(), false, false)
            acr_MH[id].start()
        else if input == "stop"
            print("|cffffd700Dev Tools: |cffff0000OFF|r", 3)
            devTools[id] = false
            acr_MH[id].stop()
            acr_MH[id].destr()
        else if input == "ms"
            print(selectedUnit.getMoveSpeed().toString())   
        else if input == "meta"
            selectedUnit.issueImmediateOrder("metamorphosis")
        else if input == "pause"
            selectedUnit.pauseEx()   
            selectedUnit.addTagPauseEX()       
        else if input == "unpause"
            selectedUnit.unpauseEx()  
            selectedUnit.removeTagPauseEX()                     
        else if input == "music"
            StopMusic(false)
        else if input == "gold"
            print(udg_PlayHero[id].getOwner().getGold())
        else if input == "1v1"
            trig_TournamentSoLoBeginActions()
        else if input == "2v2"
            trig_Tournament222BeginActions()
        else if input == "3v3"
            trig_TeamTournament333BeginActions()
        else if input == "boss"
            trig_VsBossBeginActions()
        else if input == "ffa"
            trig_TournamentFFAActions()
        else if input == "timer"
            acrdevtimer = 0
            acrTimer = doPeriodically(1) (CallbackPeriodic cb) ->                       
                acrdevtimer++
                print("ACR Timer: [|cffffd700"+acrdevtimer.toString()+"|r]")
        else if input == "timerstop"
            print("Destroyed ACR Timer")
            destroy acrTimer
        else if input == "revive"
            acrRevive(selectedUnit)



    EventListener.add(EVENT_PLAYER_UNIT_SELECTED) ->
        selectedUnit = GetTriggerUnit()
        print("Name: "+selectedUnit.getName())
        print("ID: "+selectedUnit.getUserData().toString())
        // let pid = selectedUnit.getHandleId()
        // print("original id: "+pid.toString())
        // let id = selectedUnit.getHandleId().toString().substring(3, 7).toInt()
        // print("new id: "+id.toString())
        // print(GetUnitUserData(selectedUnit))           
                        

function teleport ()
    CreateTrigger()
    ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
    ..addAction() ->
        if GetIssuedOrderId() == Orders.patrol and devTools[GetTriggerUnit().getOwner().getId()] == true
            SetUnitPosition(GetTriggerUnit(), GetLocationX(GetOrderPointLoc()), GetLocationY(GetOrderPointLoc()))